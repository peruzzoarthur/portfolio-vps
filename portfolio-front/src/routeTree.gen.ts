/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicationsIndexImport } from './routes/publications/index'
import { Route as PublicationsPostIdImport } from './routes/publications/$postId'
import { Route as PublicationsTagsIndexImport } from './routes/publications/tags/index'
import { Route as PublicationsTagsTagImport } from './routes/publications/tags/$tag'

// Create Virtual Routes

const CvLazyImport = createFileRoute('/cv')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const CvLazyRoute = CvLazyImport.update({
  path: '/cv',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/cv.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const PublicationsIndexRoute = PublicationsIndexImport.update({
  path: '/publications/',
  getParentRoute: () => rootRoute,
} as any)

const PublicationsPostIdRoute = PublicationsPostIdImport.update({
  path: '/publications/$postId',
  getParentRoute: () => rootRoute,
} as any)

const PublicationsTagsIndexRoute = PublicationsTagsIndexImport.update({
  path: '/publications/tags/',
  getParentRoute: () => rootRoute,
} as any)

const PublicationsTagsTagRoute = PublicationsTagsTagImport.update({
  path: '/publications/tags/$tag',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/cv': {
      preLoaderRoute: typeof CvLazyImport
      parentRoute: typeof rootRoute
    }
    '/publications/$postId': {
      preLoaderRoute: typeof PublicationsPostIdImport
      parentRoute: typeof rootRoute
    }
    '/publications/': {
      preLoaderRoute: typeof PublicationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/publications/tags/$tag': {
      preLoaderRoute: typeof PublicationsTagsTagImport
      parentRoute: typeof rootRoute
    }
    '/publications/tags/': {
      preLoaderRoute: typeof PublicationsTagsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  AboutLazyRoute,
  CvLazyRoute,
  PublicationsPostIdRoute,
  PublicationsIndexRoute,
  PublicationsTagsTagRoute,
  PublicationsTagsIndexRoute,
])

/* prettier-ignore-end */
